/** Declaration file generated by dts-gen */

export class Model {
  constructor(baseElement: any, opts: any);

  convertExpressionToSelector(expression: any): any;

  doGetDataValue(elements: any, skipFn: any): any;

  doSetDataValue(elements: any, value: any, notSkipSetIfValueAbsent: any): void;

  getBaseElement(): any;

  getData(expression: any, skipFn: any): any;

  getDataHandlerByElement(element: any): any;

  groupElementsByName(elements: any): any;

  queryElementsBySelector(selector: any): any;

  setData(expression: any, value: any, notSkipSetIfValueAbsent: any): void;

  static config: {
      defaultNameAttributeName: string;
      defaultTypeAttributeName: string;
      initDataHandlers: {
          "checkbox-boolean": {
              getValue: any;
              setValue: any;
          };
          default: {
              getInputElementValue: any;
              getSelectElementValue: any;
              getValue: any;
              setInputElementValue: any;
              setSelectElementValue: any;
              setValue: any;
          };
      };
  };

}

export const dataHandlers: {
  checkboxBooleanHandler: {
      getValue: any;
      setValue: any;
  };
  defaultDataHandler: {
      getInputElementValue: any;
      getSelectElementValue: any;
      getValue: any;
      setInputElementValue: any;
      setSelectElementValue: any;
      setValue: any;
  };
};

export function model(baseElement: any, opts: any): Model;

export namespace utils {
  function isNullOrUndefined(arg: any): any;

  function prefix(obj: any, prefix: any): any;

  function unprefix(obj: any, prefix: any): any;

}

